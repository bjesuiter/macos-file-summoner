name: Go Build & Release

on:
  push:
    # Sequence of patterns matched against refs/tags
      branches:
        # Note: One commit on master with a tag will trigger the pipeline twice 
        # (although one time in build-only mode and with the tag in deploy mode)
        - master
      tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  macosAppArtifact: 'File Summoner.app' 
  distDir: dist 

jobs:
  
  build:
    name: Build App
    runs-on: ubuntu-latest      

    steps:
    - name: Check out code from Github
      uses: actions/checkout@v2

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      id: go-install
      with:
        go-version: '^1.14.3'

    - name: Build Binary & macOS App
      id: go-build
      run: ./scripts/build
    
    - name: Store macOS App as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: '${{ env.distDir}}'
        path: '${{ env.distDir }}'
        
    - name: Show content of github.ref
      run: echo "github.ref ${{github.ref}}"
  
  deploy:
    name: Deploy App
    needs: [build]
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    
    steps:
    - name: Extract tag name
      id: tagName
      run: echo ::set-env name=tagName::$(echo ${GITHUB_REF} | cut -d / -f 3)

    - name: Set zip name env var
      id: zipName
      run: echo ::set-env name=zipName::$(echo "macos-file-summoner-${tagName}.zip");

    - name: Download macOS App Artifact
      uses: actions/download-artifact@v1
      with: 
        name: '${{ env.distDir}}'
    
    - name: Zip Artifact
      run: cd ${{ env.distDir }} && zip -r "${{ env.zipName }}" "${{env.macosAppArtifact}}"

    - name: Create Release
      id: create-release
      uses: actions/create-release@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.tagName }}
        body: |
          #### Changes in this Release
          - <<to add>>
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./${{ env.distDir }}/${{ env.zipName }}
        asset_name: ${{ env.zipName }}
        asset_content_type: application/zip
